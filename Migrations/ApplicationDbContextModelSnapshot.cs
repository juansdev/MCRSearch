// <auto-generated />
using System;
using MCRSearch.src.MCRSearch.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MCRSearch.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "02174cf0–9412–4cfe-afbf-59f706d72cf6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3c129d9d-6c58-4dba-9178-b377c3e03b91",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "admin",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAELLjMjzlFL4Pcg9+TwHp1ZdHxhajPJWUlFKXxZYwebqRLII8lFkP1f6v8QgpCOERGw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6946b7ff-7ee4-447a-8ae9-1337c347ceb0",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.AvailableVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PickUpCityId")
                        .HasColumnType("int");

                    b.Property<int>("ReturnCityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PickUpCityId");

                    b.HasIndex("ReturnCityId");

                    b.HasIndex("VehicleId");

                    b.ToTable("AvailableVehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1584),
                            PickUpCityId = 1,
                            ReturnCityId = 1,
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1588),
                            PickUpCityId = 1,
                            ReturnCityId = 1,
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1589),
                            PickUpCityId = 1,
                            ReturnCityId = 1,
                            VehicleId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1590),
                            PickUpCityId = 1,
                            ReturnCityId = 1,
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1591),
                            PickUpCityId = 1,
                            ReturnCityId = 1,
                            VehicleId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1592),
                            PickUpCityId = 1,
                            ReturnCityId = 2,
                            VehicleId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1593),
                            PickUpCityId = 1,
                            ReturnCityId = 2,
                            VehicleId = 5
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1593),
                            PickUpCityId = 2,
                            ReturnCityId = 1,
                            VehicleId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1594),
                            PickUpCityId = 3,
                            ReturnCityId = 3,
                            VehicleId = 5
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1596),
                            PickUpCityId = 3,
                            ReturnCityId = 3,
                            VehicleId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1596),
                            PickUpCityId = 3,
                            ReturnCityId = 3,
                            VehicleId = 14
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1597),
                            PickUpCityId = 3,
                            ReturnCityId = 3,
                            VehicleId = 3
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1598),
                            PickUpCityId = 4,
                            ReturnCityId = 3,
                            VehicleId = 12
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1599),
                            PickUpCityId = 4,
                            ReturnCityId = 3,
                            VehicleId = 14
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1600),
                            PickUpCityId = 4,
                            ReturnCityId = 3,
                            VehicleId = 20
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1601),
                            PickUpCityId = 4,
                            ReturnCityId = 3,
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1602),
                            PickUpCityId = 2,
                            ReturnCityId = 2,
                            VehicleId = 17
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1602),
                            PickUpCityId = 2,
                            ReturnCityId = 2,
                            VehicleId = 14
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1603),
                            PickUpCityId = 2,
                            ReturnCityId = 2,
                            VehicleId = 19
                        },
                        new
                        {
                            Id = 20,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1604),
                            PickUpCityId = 4,
                            ReturnCityId = 4,
                            VehicleId = 20
                        });
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1399),
                            DepartmentId = 1,
                            Name = "Bogotá D.C."
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1402),
                            DepartmentId = 1,
                            Name = "Tunja"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1404),
                            DepartmentId = 2,
                            Name = "Brasilia"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1405),
                            DepartmentId = 2,
                            Name = "Goiânia"
                        });
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1338),
                            Name = "Colombia"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1357),
                            Name = "Brazil"
                        });
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1382),
                            Name = "Cundinamarca"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1384),
                            Name = "Goiás"
                        });
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VehicleBrandId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleModelId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleBrandId");

                    b.HasIndex("VehicleModelId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1521),
                            VehicleBrandId = 1,
                            VehicleModelId = 1,
                            VehicleTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1523),
                            VehicleBrandId = 2,
                            VehicleModelId = 2,
                            VehicleTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1524),
                            VehicleBrandId = 3,
                            VehicleModelId = 3,
                            VehicleTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1525),
                            VehicleBrandId = 4,
                            VehicleModelId = 4,
                            VehicleTypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1526),
                            VehicleBrandId = 5,
                            VehicleModelId = 5,
                            VehicleTypeId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1527),
                            VehicleBrandId = 6,
                            VehicleModelId = 6,
                            VehicleTypeId = 4
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1528),
                            VehicleBrandId = 7,
                            VehicleModelId = 7,
                            VehicleTypeId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1529),
                            VehicleBrandId = 8,
                            VehicleModelId = 8,
                            VehicleTypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1530),
                            VehicleBrandId = 9,
                            VehicleModelId = 9,
                            VehicleTypeId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1531),
                            VehicleBrandId = 10,
                            VehicleModelId = 10,
                            VehicleTypeId = 2
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1531),
                            VehicleBrandId = 11,
                            VehicleModelId = 11,
                            VehicleTypeId = 2
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1532),
                            VehicleBrandId = 12,
                            VehicleModelId = 12,
                            VehicleTypeId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1533),
                            VehicleBrandId = 13,
                            VehicleModelId = 13,
                            VehicleTypeId = 2
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1534),
                            VehicleBrandId = 14,
                            VehicleModelId = 14,
                            VehicleTypeId = 2
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1535),
                            VehicleBrandId = 15,
                            VehicleModelId = 15,
                            VehicleTypeId = 3
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1536),
                            VehicleBrandId = 16,
                            VehicleModelId = 16,
                            VehicleTypeId = 3
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1536),
                            VehicleBrandId = 17,
                            VehicleModelId = 17,
                            VehicleTypeId = 3
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1537),
                            VehicleBrandId = 18,
                            VehicleModelId = 18,
                            VehicleTypeId = 3
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1538),
                            VehicleBrandId = 19,
                            VehicleModelId = 19,
                            VehicleTypeId = 3
                        },
                        new
                        {
                            Id = 20,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1567),
                            VehicleBrandId = 20,
                            VehicleModelId = 20,
                            VehicleTypeId = 1
                        });
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.VehicleBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("VehicleBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1420),
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1421),
                            Name = "Honda"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1422),
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1423),
                            Name = "Chevrolet"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1424),
                            Name = "Nissan"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1425),
                            Name = "Jeep"
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1426),
                            Name = "Volkswagen"
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1426),
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1427),
                            Name = "Mercedes-Benz"
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1428),
                            Name = "Subaru"
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1429),
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1430),
                            Name = "Tesla"
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1431),
                            Name = "GMC"
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1432),
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1432),
                            Name = "Hyundai"
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1433),
                            Name = "Lexus"
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1434),
                            Name = "Kia"
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1435),
                            Name = "Jaguar"
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1436),
                            Name = "Land Rover"
                        },
                        new
                        {
                            Id = 20,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1437),
                            Name = "Ford"
                        });
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("VehicleModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1470),
                            Name = "Camry"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1471),
                            Name = "Accord"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1472),
                            Name = "Explorer"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1473),
                            Name = "Malibu"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1474),
                            Name = "Rogue"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1474),
                            Name = "Wrangler"
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1475),
                            Name = "Golf"
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1476),
                            Name = "X5"
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1477),
                            Name = "C-Class"
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1478),
                            Name = "Outback"
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1478),
                            Name = "F-150"
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1479),
                            Name = "Model S"
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1480),
                            Name = "Sierra"
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1480),
                            Name = "Q7"
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1481),
                            Name = "Santa Fe"
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1482),
                            Name = "RX"
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1482),
                            Name = "Sportage"
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1483),
                            Name = "F-PACE"
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1484),
                            Name = "Discovery"
                        },
                        new
                        {
                            Id = 20,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1484),
                            Name = "Mustang"
                        });
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1505),
                            Name = "Automóvil"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1506),
                            Name = "Camioneta"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1507),
                            Name = "SUV"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 2, 17, 13, 49, 10, 474, DateTimeKind.Local).AddTicks(1508),
                            Name = "Campero"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "341743f0-asd2-42de-afbf-59kmkkmk72cf6",
                            ConcurrencyStamp = "341743f0-asd2-42de-afbf-59kmkkmk72cf6",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "02174cf0–9412–4cfe-afbf-59f706d72cf6",
                            RoleId = "341743f0-asd2-42de-afbf-59kmkkmk72cf6"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.AvailableVehicle", b =>
                {
                    b.HasOne("MCRSearch.src.MCRSearch.Core.Entities.City", "PickUpCity")
                        .WithMany()
                        .HasForeignKey("PickUpCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MCRSearch.src.MCRSearch.Core.Entities.City", "ReturnCity")
                        .WithMany()
                        .HasForeignKey("ReturnCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MCRSearch.src.MCRSearch.Core.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PickUpCity");

                    b.Navigation("ReturnCity");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.City", b =>
                {
                    b.HasOne("MCRSearch.src.MCRSearch.Core.Entities.Department", "Department")
                        .WithMany("Cities")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.Department", b =>
                {
                    b.HasOne("MCRSearch.src.MCRSearch.Core.Entities.Country", "Country")
                        .WithMany("Departments")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.Vehicle", b =>
                {
                    b.HasOne("MCRSearch.src.MCRSearch.Core.Entities.VehicleBrand", "VehicleBrand")
                        .WithMany()
                        .HasForeignKey("VehicleBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MCRSearch.src.MCRSearch.Core.Entities.VehicleModel", "VehicleModel")
                        .WithMany()
                        .HasForeignKey("VehicleModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MCRSearch.src.MCRSearch.Core.Entities.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleBrand");

                    b.Navigation("VehicleModel");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MCRSearch.src.MCRSearch.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MCRSearch.src.MCRSearch.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MCRSearch.src.MCRSearch.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MCRSearch.src.MCRSearch.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.Country", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("MCRSearch.src.MCRSearch.Core.Entities.Department", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
